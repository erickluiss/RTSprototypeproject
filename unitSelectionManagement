using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class UnitSelectionManagement : MonoBehaviour
{
    List<GameObject> SelectedUnits;
    List<GameObject> SelectedEnvironmentObject;
    List<GameObject> SelectedStructures;
    GameObject selectedUnit;
    GameObject sHighlight;
    GameObject eHighlight;
    GameObject highlight;

    void Start()
    {
        SelectedUnits = new List<GameObject>();
        SelectedEnvironmentObject = new List<GameObject>();
        SelectedStructures = new List<GameObject>();
    }

    void Update()
    {
        var mouseButton0isPresssed = Input.GetMouseButtonDown(0);

        if (mouseButton0isPresssed)
        {

            UnitSelecionSystem(selectedUnit);
        }
    }


    void UnitSelecionSystem(GameObject @object)
    {

        Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);
        Physics.Raycast(ray, out RaycastHit hit);

        var shiftIsPressed = Input.GetKey(KeyCode.LeftShift);
        var objectClicked = hit.collider.gameObject;
        var objectIsSelected = hit.transform.tag == "Selectable";
        var structureIsSelected = hit.transform.tag == "StructSelectable";
        var environmentObjectIsSelected = hit.transform.tag == "ESelectable";

        if (highlight || eHighlight || sHighlight != null)
        {
            if (!shiftIsPressed)
            {
                ClearAllSelections();
            }
        }

        if (objectIsSelected)  // Unit selected
        {
            if (!shiftIsPressed || SelectedEnvironmentObject.Count >= 1 || SelectedStructures.Count >= 1)
            {
                ClearAllSelections();
            }
            @object = objectClicked;
            SelectedUnits.Add(@object);
            ActivateHighlightOnUnitsListed();
        }

        if (structureIsSelected){  // Structure selected

            ClearAllSelections();
            @object = objectClicked;
            SelectedStructures.Add(@object);
            ActivateHighlightOnUnitsListed();

        }
        
        if (environmentObjectIsSelected) // Enviroment object selected
        {
            ClearAllSelections();
            @object = objectClicked;
            SelectedEnvironmentObject.Add(@object);
            ActivateHighlightOnUnitsListed();
        }

        selectedUnit = @object;
    }

    void ActivateHighlightOnUnitsListed()
    {

        foreach (GameObject selectedUnit in SelectedUnits)
        {
            highlight = selectedUnit.transform.Find("Highlight").gameObject;
            highlight.SetActive(true);
        }
        foreach (GameObject selectedUnit in SelectedEnvironmentObject)
        {
            eHighlight = selectedUnit.transform.Find("eHighlight").gameObject;
            eHighlight.SetActive(true);
        }
        foreach (GameObject selectedUnit in SelectedStructures)
        {
            sHighlight = selectedUnit.transform.Find("sHighlight").gameObject;
            sHighlight.SetActive(true);
        }
    }

    void ClearAllSelections()
    {
        if(SelectedUnits != null || SelectedStructures != null || SelectedEnvironmentObject != null){
            foreach (GameObject selectedUnit in SelectedUnits)
            {
                highlight = selectedUnit.transform.Find("Highlight").gameObject;
                highlight.SetActive(false);
            }
            foreach (GameObject selectedUnit in SelectedEnvironmentObject)
            {
                eHighlight = selectedUnit.transform.Find("eHighlight").gameObject;
                eHighlight.SetActive(false);
            }
            foreach (GameObject selectedUnit in SelectedStructures)
            {
                sHighlight = selectedUnit.transform.Find("sHighlight").gameObject;
                sHighlight.SetActive(false);
            }
        }
        SelectedUnits.Clear();
        SelectedEnvironmentObject.Clear();
        SelectedStructures.Clear();
    }
}

